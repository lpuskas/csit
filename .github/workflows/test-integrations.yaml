# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: test-integrations
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      kind_version:
        description: 'Kind version'
        required: false
        default: '0.24.0'
      override_directory_image_tag:
        description: 'Override Directory image tag'
        required: false
        default: ''
      override_directory_chart_tag:
        description: 'Override Directory chart tag'
        required: false
        default: ''
      override_gateway_image_tag:
        description: 'Override Gateway image tag'
        required: false
        default: ''
      override_gateway_chart_tag:
        description: 'Override Gateway chart tag'
        required: false
        default: ''
      skip_directory_test:
        description: 'Skip directory tests'
        required: false
        default: false
        type: boolean
      skip_gateway_test:
        description: 'Skip gateway tests'
        required: false
        default: false
        type: boolean
  schedule:
    - cron: "0 4 * * *"

jobs:
  set-kind-version:
    runs-on: ubuntu-latest
    outputs:
      kind-version: ${{steps.set-kind-version.outputs.kind-version }}
    steps:
      - name: Set KinD version
        id: set-kind-version
        env:
          KIND_VERSION: '0.24.0'
        shell: bash
        run: |
          if [ "${{ github.event_name }}" == 'workflow_dispatch' ]; then
              KIND_VERSION="${{ inputs.kind_version }}"
          fi

          echo "Set KinD version to: $KIND_VERSION"
          echo "kind-version=$KIND_VERSION" >> "$GITHUB_OUTPUT"

  run-tests-gateway:
    if: ${{ inputs.skip_gateway_test == false }}
    needs: [ set-kind-version ]
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'
      attestations: 'read'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          python: true
          go: false

      - name: Setup K8S Tools
        uses: ./.github/actions/setup-k8s
        with:
          kind-version: ${{ needs.set-kind-version.outputs.kind-version }}

      - name: Deploy Gateway
        uses: ./.github/actions/deploy-components
        with:
          deploy-gateway: 'true'
          gateway-image-tag: ${{ inputs.override_gateway_image_tag }}
          gateway-chart-tag: ${{ inputs.override_gateway_chart_tag }}

      - name: Run gateway sanity tests
        env:
          AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          AZURE_MODEL_VERSION: ${{ vars.AZURE_MODEL_VERSION }}
          AZURE_DEPLOYMENT_NAME: ${{ vars.AZURE_DEPLOYMENT_NAME }}
          AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        run: task integrations:gateway:test:sanity
        shell: bash

      - name: Run gateway MCP integration tests
        env:
          AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          AZURE_MODEL_VERSION: ${{ vars.AZURE_MODEL_VERSION }}
          AZURE_DEPLOYMENT_NAME: ${{ vars.AZURE_DEPLOYMENT_NAME }}
          AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
        run: task integrations:gateway:test:mcp-server
        shell: bash

  run-tests-directory:
    if: ${{ inputs.skip_directory_test == false }}
    needs: [ set-kind-version ]
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'
      attestations: 'read'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          python: true
          go: false

      - name: Setup K8S Tools
        uses: ./.github/actions/setup-k8s
        with:
          kind-version: ${{ needs.set-kind-version.outputs.kind-version }}

      - name: Deploy Directory
        uses: ./.github/actions/deploy-components
        with:
          deploy-directory: 'true'
          directory-image-tag: ${{ inputs.override_directory_image_tag}}
          directory-chart-tag: ${{ inputs.override_directory_chart_tag }}

      - name: Run Directory tests
        run: task integrations:directory:test
        shell: bash

  run-agentic-apps:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          python: true
          go: false

      - name: Run Agentic Apps
        env:
          AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          TEST_ENV_VAR: "anything"
        run: task integrations:apps:run-marketing-campaign
        shell: bash

  run-tests-wfsm:
    needs: [ set-kind-version ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Environment
        uses: ./.github/actions/setup-env
        with:
          python: true
          go: true

      - name: Run Workflow Server Manger Test
        env:
          AZURE_OPENAI_ENDPOINT: ${{ vars.AZURE_OPENAI_ENDPOINT }}
          AZURE_OPENAI_API_VERSION: ${{ vars.AZURE_OPENAI_API_VERSION }}
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}
          TEST_ENV_VAR: "anything"
        run: task -d integrations/agntcy-wfsm wfsm:test:e2e
        shell: bash
