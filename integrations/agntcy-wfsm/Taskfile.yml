# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

---
version: '3'

silent: true

vars:
  AZURE_OPENAI_API_KEY: '{{ .AZURE_OPENAI_API_KEY | default "" }}'
  AZURE_OPENAI_ENDPOINT: '{{ .AZURE_OPENAI_ENDPOINT | default "" }}'
  AZURE_OPENAI_API_VERSION: '{{ .AZURE_OPENAI_API_VERSION | default "2025-02-01-preview" }}'

  ARCH:
    sh: |
      if [ "$ARCH" == "" ]; then
        uname -m
      else
        printf $ARCH
      fi
  OS:
    sh: |
      if [ "$OS" == "" ]; then
        uname -s
      else
        printf $OS
      fi
  WFSM_BIN_PATH:
    sh: |
      if [ "$WFSM_BIN_PATH" == "" ]; then
        printf "{{.TASKFILE_DIR}}/tools"
      else
        printf $WFSM_BIN_PATH
      fi

includes:
  parent:
    taskfile: ../Taskfile.yml
    dir: ..
    excludes: [ default ]
    vars:
      KIND_CLUSTER_NAME: '{{ .KIND_CLUSTER_NAME }}'
      WFSM_BIN_VERSION: '{{ .WFSM_BIN_VERSION }}'
      DIRCTL_BIN_PATH: '{{ .DIRCTL_BIN_PATH }}'
      DIRCTL_BIN_VERSION: '{{ .DIRCTL_BIN_VERSION }}'

tasks:

  wfsm:test:setup:
    desc: Sets up prerequisites for testing the wfsm
    cmds:
      - cmd: echo "Setting up wfsm test environment"
      - cmd: echo "Setting up kind cluster..."
      - task: parent:kind:create
      - cmd: echo "Setting up directory..."
      - task: parent:directory:test-env:deploy
      - task: parent:directory:download:dirctl-bin
      - task: wfsm:download:wfsm-bin

  wfsm:test:teardown:
    desc: Cleans up after testing the wfsm
    cmds:
      - cmd: echo "Cleaning up wfsm test environment"
      - task: parent:directory:test-env:cleanup
      - task: parent:directory:k8s:port-forward:teardown
      - task: parent:kind:destroy

  wfsm:download:wfsm-bin:
    desc: Downloads the wfsm tool binary from GitHub releases
    vars:
      cmd: echo "Downloading wfsm binary"
      TEMP_PATH: '{{ .TEMP_PATH | default "/tmp" }}'
      WFSM_BIN_PATH: '{{ .TEMP_PATH | default "/tmp" }}'
      WFSM_BIN_VERSION: 'v0.2.2'
    cmds:
      - |
        export WFSM_TAG={{.WFSM_BIN_VERSION}}
        export WFSM_TARGET={{.WFSM_BIN_PATH}};
        curl -L https://raw.githubusercontent.com/agntcy/workflow-srv-mgr/refs/heads/main/install.sh | bash


  wfsm:dir:push:manifest:
    desc: "Pushes the agent manifest to the directory"
    vars:
      MANIFEST_PATH: '{{ .MANIFEST_PATH | default "./assets/echo_agent.json" }}'
      TMP_PATH: '{{ .TMP_PATH | default "/tmp" }}'

    cmds:
      - task: parent:directory:k8s:port-forward:setup
      - defer: { task: parent:directory:k8s:port-forward:teardown }
      - echo "Pushing the agent manifest to the directory "
      - 'cp -R {{ .MANIFEST_PATH }} "{{ .TMP_PATH}}/manifest.json"'
      - '{{ .DIRCTL_BIN_PATH}}/dirctl push {{ .MANIFEST_PATH}} > "{{ .TMP_PATH}}/digest.json"'

  wfsm:deploy:manifest:
    vars:
      TMP_PATH: '{{ .TMP_PATH | default "/tmp" }}'
    env:
      AZURE_OPENAI_API_KEY: '{{ .AZURE_OPENAI_API_KEY | default "xxx" }}'
      AZURE_OPENAI_ENDPOINT: '{{ .AZURE_OPENAI_ENDPOINT | default "yyy" }}'
      AZURE_OPENAI_API_VERSION: '{{ .AZURE_OPENAI_API_VERSION | default "2025-02-01-preview" }}'

    cmds:
      - echo "Current TMP_PATH is {{ .TMP_PATH }}"
      - task: parent:directory:k8s:port-forward:setup
      - defer: { task: parent:directory:k8s:port-forward:teardown }
      - '"{{ .TMP_PATH}}/wfsm" deploy --manifestPath="$(<{{ .TMP_PATH}}/digest.json)" --dryRun=false'


  wfsm:check:agent:
    desc: Checks the agent status
    cmds:
      - echo "Checking the agent ACP Workflow Server"
      - TODO curl -s -X GET http://localhost:8080/healthz | jq .status

  wfsm:test:e2e:
    desc: Tests the wfsm deploy command using an agent manifest from the directory
    deps: [ wfsm:test:setup ]
    cmds:
      - task: wfsm:dir:push:manifest
      - task: wfsm:deploy:manifest
      - task: wfsm:check:agent
      - defer: { task: wfsm:test:teardown }

  default:
    cmd: task -l