# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

---
version: '3'

silent: true

vars:
  KIND_CLUSTER_NAME: '{{ .KIND_CLUSTER_NAME | default "agntcy-test" }}'

  ## Image config
  IMAGE_REPO: '{{ .IMAGE_REPO | default "ghcr.io/agntcy" }}'

  DIRECTORY_IMAGE_TAG: '{{ .DIRECTORY_IMAGE_TAG | default "v0.2.1" }}'
  DIRECTORY_CHART_TAG: '{{ .DIRECTORY_CHART_TAG | default "v0.2.1" }}'
  DIRECTORY_NAMESPACE: '{{ .DIRECTORY_NAMESPACE | default "default" }}'

  REMOVE_CONTAINERS: '{{ .REMOVE_CONTAINERS | default "true" }}'

  RUNNER_TYPE: '{{ .RUNNER_TYPE | default "docker" }}'

  ARCH:
    sh: |
      if [ "$ARCH" == "" ]; then
        uname -m
      else
        printf $ARCH
      fi
  OS:
    sh: |
      if [ "$OS" == "" ]; then
        uname -s
      else
        printf $OS
      fi
  DIRCTL_BIN_PATH:
    sh: |
      if [ "$DIRCTL_BIN_PATH" == "" ]; then
        printf /tmp
      else
        printf $DIRCTL_BIN_PATH
      fi
  DIRCTL_BIN_VERSION: '{{ .DIRCTL_BIN_VERSION | default "v0.2.1" }}'

tasks:
  k8s:port-forward:setup:
    internal: true
    cmds:
      - kubectl port-forward svc/agntcy-dir-apiserver -n {{ .DIRECTORY_NAMESPACE }} 8888 &
      - sleep 1

  k8s:peers:port-forward:setup:
    internal: true
    cmds:
      - kubectl port-forward svc/agntcy-dir-apiserver -n peer1 8890:8888 &
      - kubectl port-forward svc/agntcy-dir-apiserver -n peer2 8891:8888 &
      - kubectl port-forward svc/agntcy-dir-apiserver -n peer3 8892:8888 &
      - sleep 1

  k8s:port-forward:teardown:
    internal: true
    cmds:
      - kill -9 $(ps aux | grep port-forward | grep agntcy-dir-apiserver | awk '{print $2}') || true

  test-env:deploy:
    desc: Deploy Agntcy directory test env
    cmds:
      - |
        helm upgrade agntcy-dir \
          oci://{{ .IMAGE_REPO }}/dir/helm-charts/dir \
          --version {{ .DIRECTORY_CHART_TAG }} \
          --set apiserver.image.tag="{{ .DIRECTORY_IMAGE_TAG }}" \
          --set apiserver.config.oci.registry_address="agntcy-dir-zot:5000" \
          --namespace {{ .DIRECTORY_NAMESPACE }} \
          --create-namespace \
          --install \
          --wait \
          --wait-for-jobs \
          --timeout "15m"

  test-env:cleanup:
    desc: Remove agntcy directory test env
    cmds:
      - helm delete --ignore-not-found --namespace {{ .DIRECTORY_NAMESPACE }} agntcy-dir

  test-env:bootstrap:deploy:
    desc: Deploy Directory network peers
    deps:
      - download:dirctl-bin
    env:
      DIRECTORY_LOGGER_LOG_LEVEL: ERROR
    cmds:
      - |
        test -f /tmp/node.privkey || openssl genpkey -algorithm ED25519 -out /tmp/node.privkey
        bootstrap_peerid=$({{ .DIRCTL_BIN_PATH }}/dirctl network info /tmp/node.privkey)
        echo "PEER ID: ${bootstrap_peerid}"
        echo BOOTSTRAP_PEER_ID="${bootstrap_peerid}" > .env
        helm upgrade agntcy-dir \
          oci://{{ .IMAGE_REPO }}/dir/helm-charts/dir \
          --version {{ .DIRECTORY_CHART_TAG }} \
          --set apiserver.image.tag="{{ .DIRECTORY_IMAGE_TAG }}" \
          --set apiserver.privKey="$(cat /tmp/node.privkey)" \
          --set apiserver.config.oci.registry_address="agntcy-dir-zot:5000" \
          -f ./components/config/bootstrap.yaml \
          --namespace bootstrap \
          --create-namespace \
          --install \
          --wait \
          --wait-for-jobs \
          --timeout "15m"

  test-env:network:deploy:
    desc: Deploy Directory network peers
    deps:
      - test-env:bootstrap:deploy
    cmds:
      - for:
          matrix:
            PEER: ['peer1', 'peer2', 'peer3']
        cmd: |
          export $(cat .env)
          helm upgrade agntcy-dir \
           oci://{{ .IMAGE_REPO }}/dir/helm-charts/dir \
            --version {{ .DIRECTORY_CHART_TAG }} \
            --set apiserver.image.tag="{{ .DIRECTORY_IMAGE_TAG }}" \
            --set apiserver.config.routing.bootstrap_peers[0]="/dns4/agntcy-dir-apiserver-routing.bootstrap.svc.cluster.local/tcp/8999/p2p/${BOOTSTRAP_PEER_ID}" \
            --set apiserver.config.oci.registry_address="agntcy-dir-zot:5000" \
            --namespace "{{ .ITEM.PEER }}" \
            --create-namespace \
            --install \
            --wait \
            --wait-for-jobs \
            --timeout "15m"

  test-env:network:cleanup:
    desc: Remove Directory network peers
    cmds:
      - for:
          matrix:
            PEER: ['bootstrap', 'peer1', 'peer2', 'peer3']
        cmd: |
          helm delete --namespace {{ .ITEM.PEER }} agntcy-dir

  test:
    desc: All directory test
    cmds:
      - task: k8s:port-forward:setup
      - task: k8s:peers:port-forward:setup
      - defer: { task: k8s:port-forward:teardown }
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 30m -timeout 30m -ginkgo.v

  test:compiler:
    desc: Agntcy compiler test
    cmds:
      - docker pull {{.IMAGE_REPO}}/dir-ctl:{{.DIRECTORY_IMAGE_TAG}}
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 10m -timeout 10m -ginkgo.v -ginkgo.focus "agent compilation"

  test:compile:samples:
    desc: Agntcy compiler test in samples
    cmds:
      - docker pull {{.IMAGE_REPO}}/dir-ctl:{{.DIRECTORY_IMAGE_TAG}}
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 10m -timeout 10m -ginkgo.v -ginkgo.focus "Samples build test"

  test:push:
    desc: Directory agent push test
    cmds:
      - task: k8s:port-forward:setup
      - defer: { task: k8s:port-forward:teardown }
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 30m -timeout 30m -ginkgo.v -ginkgo.focus "agent push and pull"

  test:list:
    desc: Directory agent list test
    cmds:
      - task: k8s:port-forward:setup
      - defer: { task: k8s:port-forward:teardown }
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 30m -timeout 30m -ginkgo.v -ginkgo.focus "Agntcy agent list tests"

  test:delete:
    desc: Directory agent delete test
    cmds:
      - task: k8s:port-forward:setup
      - defer: { task: k8s:port-forward:teardown }
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 30m -timeout 30m -ginkgo.v -ginkgo.focus "Agntcy agent delete tests"

  test:networking:
    desc: Directory agent networking test
    cmds:
      - task: k8s:peers:port-forward:setup
      - defer: { task: k8s:port-forward:teardown }
      - REMOVE_CONTAINERS={{.REMOVE_CONTAINERS}} RUNNER_TYPE={{.RUNNER_TYPE}} PATH=$PATH:{{.DIRCTL_BIN_PATH}} IMAGE_REPO={{.IMAGE_REPO}} DIRECTORY_IMAGE_TAG={{.DIRECTORY_IMAGE_TAG}} go test ./tests -v -failfast -test.v -test.paniconexit0 -ginkgo.timeout 30m -timeout 30m -ginkgo.v -ginkgo.focus "Agntcy directory networking test"

  download:dirctl-bin:
    desc: Get dirctl binary from GitHub
    vars:
      ARCH:
        sh: |
          printf "%s" "{{.ARCH}}" | \
            sed -E 's/^(aarch64|aarch64_be|armv6l|armv7l|armv8b|armv8l)$$/arm64/g' | \
            sed -E 's/^x86_64$$/amd64/g'
      OS:
        sh: printf "%s" "{{.OS}}" | tr '[:upper:]' '[:lower:]'
    cmds:
      - |
        URL=https://github.com/agntcy/dir/releases/download/{{.DIRCTL_BIN_VERSION}}/dirctl-{{.OS}}-{{.ARCH}}
        echo $URL
        curl \
          --fail \
          --show-error \
          --create-dirs \
          --location $URL \
          --output "{{.DIRCTL_BIN_PATH}}/dirctl" && \
        chmod +x "{{.DIRCTL_BIN_PATH}}/dirctl"

        # NOTE: The attribute may removed already, silent errors
        xattr -d com.apple.quarantine "{{.DIRCTL_BIN_PATH}}/dirctl" &> /dev/null || true

  default:
    cmd: task -l
